{"version":3,"file":"cognitiveservices-anomalydetector.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/anomalyDetectorClientContext.ts","../src/anomalyDetectorClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n/**\n * Error information returned by the API.\n */\nexport interface APIError {\n  /**\n   * The error code.\n   */\n  code?: any;\n  /**\n   * A message explaining the error reported by the service.\n   */\n  message?: string;\n}\n\n/**\n * An interface representing Point.\n */\nexport interface Point {\n  /**\n   * Timestamp of a data point (ISO8601 format).\n   */\n  timestamp: Date;\n  /**\n   * The measurement of that point, should be float.\n   */\n  value: number;\n}\n\n/**\n * An interface representing Request.\n */\nexport interface Request {\n  /**\n   * Time series data points. Points should be sorted by timestamp in ascending order to match the\n   * anomaly detection result. If the data is not sorted correctly or there is duplicated\n   * timestamp, the API will not work. In such case, an error message will be returned.\n   */\n  series: Point[];\n  /**\n   * Possible values include: 'yearly', 'monthly', 'weekly', 'daily', 'hourly', 'minutely',\n   * 'secondly'\n   */\n  granularity: Granularity;\n  /**\n   * Custom Interval is used to set non-standard time interval, for example, if the series is 5\n   * minutes, request can be set as {\"granularity\":\"minutely\", \"customInterval\":5}.\n   */\n  customInterval?: number;\n  /**\n   * Optional argument, periodic value of a time series. If the value is null or does not present,\n   * the API will determine the period automatically.\n   */\n  period?: number;\n  /**\n   * Optional argument, advanced model parameter, max anomaly ratio in a time series.\n   */\n  maxAnomalyRatio?: number;\n  /**\n   * Optional argument, advanced model parameter, between 0-99, the lower the value is, the larger\n   * the margin value will be which means less anomalies will be accepted.\n   */\n  sensitivity?: number;\n}\n\n/**\n * An interface representing EntireDetectResponse.\n */\nexport interface EntireDetectResponse {\n  /**\n   * Frequency extracted from the series, zero means no recurrent pattern has been found.\n   */\n  period: number;\n  /**\n   * ExpectedValues contain expected value for each input point. The index of the array is\n   * consistent with the input series.\n   */\n  expectedValues: number[];\n  /**\n   * UpperMargins contain upper margin of each input point. UpperMargin is used to calculate\n   * upperBoundary, which equals to expectedValue + (100 - marginScale)*upperMargin. Anomalies in\n   * response can be filtered by upperBoundary and lowerBoundary. By adjusting marginScale value,\n   * less significant anomalies can be filtered in client side. The index of the array is\n   * consistent with the input series.\n   */\n  upperMargins: number[];\n  /**\n   * LowerMargins contain lower margin of each input point. LowerMargin is used to calculate\n   * lowerBoundary, which equals to expectedValue - (100 - marginScale)*lowerMargin. Points between\n   * the boundary can be marked as normal ones in client side. The index of the array is consistent\n   * with the input series.\n   */\n  lowerMargins: number[];\n  /**\n   * IsAnomaly contains anomaly properties for each input point. True means an anomaly either\n   * negative or positive has been detected. The index of the array is consistent with the input\n   * series.\n   */\n  isAnomaly: boolean[];\n  /**\n   * IsNegativeAnomaly contains anomaly status in negative direction for each input point. True\n   * means a negative anomaly has been detected. A negative anomaly means the point is detected as\n   * an anomaly and its real value is smaller than the expected one. The index of the array is\n   * consistent with the input series.\n   */\n  isNegativeAnomaly: boolean[];\n  /**\n   * IsPositiveAnomaly contain anomaly status in positive direction for each input point. True\n   * means a positive anomaly has been detected. A positive anomaly means the point is detected as\n   * an anomaly and its real value is larger than the expected one. The index of the array is\n   * consistent with the input series.\n   */\n  isPositiveAnomaly: boolean[];\n}\n\n/**\n * An interface representing LastDetectResponse.\n */\nexport interface LastDetectResponse {\n  /**\n   * Frequency extracted from the series, zero means no recurrent pattern has been found.\n   */\n  period: number;\n  /**\n   * Suggested input series points needed for detecting the latest point.\n   */\n  suggestedWindow: number;\n  /**\n   * Expected value of the latest point.\n   */\n  expectedValue: number;\n  /**\n   * Upper margin of the latest point. UpperMargin is used to calculate upperBoundary, which equals\n   * to expectedValue + (100 - marginScale)*upperMargin. If the value of latest point is between\n   * upperBoundary and lowerBoundary, it should be treated as normal value. By adjusting\n   * marginScale value, anomaly status of latest point can be changed.\n   */\n  upperMargin: number;\n  /**\n   * Lower margin of the latest point. LowerMargin is used to calculate lowerBoundary, which equals\n   * to expectedValue - (100 - marginScale)*lowerMargin.\n   */\n  lowerMargin: number;\n  /**\n   * Anomaly status of the latest point, true means the latest point is an anomaly either in\n   * negative direction or positive direction.\n   */\n  isAnomaly: boolean;\n  /**\n   * Anomaly status in negative direction of the latest point. True means the latest point is an\n   * anomaly and its real value is smaller than the expected one.\n   */\n  isNegativeAnomaly: boolean;\n  /**\n   * Anomaly status in positive direction of the latest point. True means the latest point is an\n   * anomaly and its real value is larger than the expected one.\n   */\n  isPositiveAnomaly: boolean;\n}\n\n/**\n * An interface representing ChangePointDetectRequest.\n */\nexport interface ChangePointDetectRequest {\n  /**\n   * Time series data points. Points should be sorted by timestamp in ascending order to match the\n   * change point detection result.\n   */\n  series: Point[];\n  /**\n   * Can only be one of yearly, monthly, weekly, daily, hourly, minutely or secondly. Granularity\n   * is used for verify whether input series is valid. Possible values include: 'yearly',\n   * 'monthly', 'weekly', 'daily', 'hourly', 'minutely', 'secondly'\n   */\n  granularity: Granularity;\n  /**\n   * Custom Interval is used to set non-standard time interval, for example, if the series is 5\n   * minutes, request can be set as {\"granularity\":\"minutely\", \"customInterval\":5}.\n   */\n  customInterval?: number;\n  /**\n   * Optional argument, periodic value of a time series. If the value is null or does not present,\n   * the API will determine the period automatically.\n   */\n  period?: number;\n  /**\n   * Optional argument, advanced model parameter, a default stableTrendWindow will be used in\n   * detection.\n   */\n  stableTrendWindow?: number;\n  /**\n   * Optional argument, advanced model parameter, between 0.0-1.0, the lower the value is, the\n   * larger the trend error will be which means less change point will be accepted.\n   */\n  threshold?: number;\n}\n\n/**\n * An interface representing ChangePointDetectResponse.\n */\nexport interface ChangePointDetectResponse {\n  /**\n   * Frequency extracted from the series, zero means no recurrent pattern has been found.\n   */\n  period: number;\n  /**\n   * isChangePoint contains change point properties for each input point. True means an anomaly\n   * either negative or positive has been detected. The index of the array is consistent with the\n   * input series.\n   */\n  isChangePoint: boolean[];\n  /**\n   * the change point confidence of each point\n   */\n  confidenceScores: number[];\n}\n\n/**\n * Defines values for Granularity.\n * Possible values include: 'yearly', 'monthly', 'weekly', 'daily', 'hourly', 'minutely',\n * 'secondly'\n * @readonly\n * @enum {string}\n */\nexport type Granularity = 'yearly' | 'monthly' | 'weekly' | 'daily' | 'hourly' | 'minutely' | 'secondly';\n\n/**\n * Contains response data for the entireDetect operation.\n */\nexport type EntireDetectResponse2 = EntireDetectResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: EntireDetectResponse;\n    };\n};\n\n/**\n * Contains response data for the lastDetect operation.\n */\nexport type LastDetectResponse2 = LastDetectResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: LastDetectResponse;\n    };\n};\n\n/**\n * Contains response data for the changePointDetect operation.\n */\nexport type ChangePointDetectResponse2 = ChangePointDetectResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ChangePointDetectResponse;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n\nexport const APIError: msRest.CompositeMapper = {\n  serializedName: \"APIError\",\n  type: {\n    name: \"Composite\",\n    className: \"APIError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Point: msRest.CompositeMapper = {\n  serializedName: \"Point\",\n  type: {\n    name: \"Composite\",\n    className: \"Point\",\n    modelProperties: {\n      timestamp: {\n        required: true,\n        serializedName: \"timestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Request: msRest.CompositeMapper = {\n  serializedName: \"Request\",\n  type: {\n    name: \"Composite\",\n    className: \"Request\",\n    modelProperties: {\n      series: {\n        required: true,\n        serializedName: \"series\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Point\"\n            }\n          }\n        }\n      },\n      granularity: {\n        required: true,\n        nullable: false,\n        serializedName: \"granularity\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"yearly\",\n            \"monthly\",\n            \"weekly\",\n            \"daily\",\n            \"hourly\",\n            \"minutely\",\n            \"secondly\"\n          ]\n        }\n      },\n      customInterval: {\n        serializedName: \"customInterval\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      period: {\n        serializedName: \"period\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxAnomalyRatio: {\n        serializedName: \"maxAnomalyRatio\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sensitivity: {\n        serializedName: \"sensitivity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const EntireDetectResponse: msRest.CompositeMapper = {\n  serializedName: \"EntireDetectResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"EntireDetectResponse\",\n    modelProperties: {\n      period: {\n        required: true,\n        serializedName: \"period\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      expectedValues: {\n        required: true,\n        serializedName: \"expectedValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      upperMargins: {\n        required: true,\n        serializedName: \"upperMargins\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      lowerMargins: {\n        required: true,\n        serializedName: \"lowerMargins\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      isAnomaly: {\n        required: true,\n        serializedName: \"isAnomaly\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Boolean\"\n            }\n          }\n        }\n      },\n      isNegativeAnomaly: {\n        required: true,\n        serializedName: \"isNegativeAnomaly\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Boolean\"\n            }\n          }\n        }\n      },\n      isPositiveAnomaly: {\n        required: true,\n        serializedName: \"isPositiveAnomaly\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Boolean\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LastDetectResponse: msRest.CompositeMapper = {\n  serializedName: \"LastDetectResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"LastDetectResponse\",\n    modelProperties: {\n      period: {\n        required: true,\n        serializedName: \"period\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      suggestedWindow: {\n        required: true,\n        serializedName: \"suggestedWindow\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      expectedValue: {\n        required: true,\n        serializedName: \"expectedValue\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      upperMargin: {\n        required: true,\n        serializedName: \"upperMargin\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lowerMargin: {\n        required: true,\n        serializedName: \"lowerMargin\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isAnomaly: {\n        required: true,\n        serializedName: \"isAnomaly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isNegativeAnomaly: {\n        required: true,\n        serializedName: \"isNegativeAnomaly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isPositiveAnomaly: {\n        required: true,\n        serializedName: \"isPositiveAnomaly\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChangePointDetectRequest: msRest.CompositeMapper = {\n  serializedName: \"ChangePointDetectRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"ChangePointDetectRequest\",\n    modelProperties: {\n      series: {\n        required: true,\n        serializedName: \"series\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Point\"\n            }\n          }\n        }\n      },\n      granularity: {\n        required: true,\n        nullable: false,\n        serializedName: \"granularity\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"yearly\",\n            \"monthly\",\n            \"weekly\",\n            \"daily\",\n            \"hourly\",\n            \"minutely\",\n            \"secondly\"\n          ]\n        }\n      },\n      customInterval: {\n        serializedName: \"customInterval\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      period: {\n        serializedName: \"period\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      stableTrendWindow: {\n        serializedName: \"stableTrendWindow\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      threshold: {\n        serializedName: \"threshold\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChangePointDetectResponse: msRest.CompositeMapper = {\n  serializedName: \"ChangePointDetectResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ChangePointDetectResponse\",\n    modelProperties: {\n      period: {\n        required: true,\n        serializedName: \"period\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isChangePoint: {\n        required: true,\n        serializedName: \"isChangePoint\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Boolean\"\n            }\n          }\n        }\n      },\n      confidenceScores: {\n        required: true,\n        serializedName: \"confidenceScores\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const endpoint: msRest.OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    required: true,\n    serializedName: \"Endpoint\",\n    defaultValue: '',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nconst packageName = \"@azure/cognitiveservices-anomalydetector\";\nconst packageVersion = \"2.1.0\";\n\nexport class AnomalyDetectorClientContext extends msRest.ServiceClient {\n  endpoint: string;\n  credentials: msRest.ServiceClientCredentials;\n\n  /**\n   * Initializes a new instance of the AnomalyDetectorClientContext class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:\n   * https://westus2.api.cognitive.microsoft.com).\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions) {\n    if (endpoint == undefined) {\n      throw new Error(\"'endpoint' cannot be null.\");\n    }\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = msRest.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.baseUri = \"{Endpoint}/anomalydetector/v1.0\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.endpoint = endpoint;\n    this.credentials = credentials;\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as Parameters from \"./models/parameters\";\nimport { AnomalyDetectorClientContext } from \"./anomalyDetectorClientContext\";\n\nclass AnomalyDetectorClient extends AnomalyDetectorClientContext {\n  /**\n   * Initializes a new instance of the AnomalyDetectorClient class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:\n   * https://westus2.api.cognitive.microsoft.com).\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions) {\n    super(credentials, endpoint, options);\n  }\n\n  /**\n   * This operation generates a model using an entire series, each point is detected with the same\n   * model. With this method, points before and after a certain point are used to determine whether\n   * it is an anomaly. The entire detection can give user an overall status of the time series.\n   * @summary Detect anomalies for the entire series in batch.\n   * @param body Time series points and period if needed. Advanced model parameters can also be set\n   * in the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.EntireDetectResponse2>\n   */\n  entireDetect(body: Models.Request, options?: msRest.RequestOptionsBase): Promise<Models.EntireDetectResponse2>;\n  /**\n   * @param body Time series points and period if needed. Advanced model parameters can also be set\n   * in the request.\n   * @param callback The callback\n   */\n  entireDetect(body: Models.Request, callback: msRest.ServiceCallback<Models.EntireDetectResponse>): void;\n  /**\n   * @param body Time series points and period if needed. Advanced model parameters can also be set\n   * in the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  entireDetect(body: Models.Request, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EntireDetectResponse>): void;\n  entireDetect(body: Models.Request, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.EntireDetectResponse>, callback?: msRest.ServiceCallback<Models.EntireDetectResponse>): Promise<Models.EntireDetectResponse2> {\n    return this.sendOperationRequest(\n      {\n        body,\n        options\n      },\n      entireDetectOperationSpec,\n      callback) as Promise<Models.EntireDetectResponse2>;\n  }\n\n  /**\n   * This operation generates a model using points before the latest one. With this method, only\n   * historical points are used to determine whether the target point is an anomaly. The latest point\n   * detecting operation matches the scenario of real-time monitoring of business metrics.\n   * @summary Detect anomaly status of the latest point in time series.\n   * @param body Time series points and period if needed. Advanced model parameters can also be set\n   * in the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.LastDetectResponse2>\n   */\n  lastDetect(body: Models.Request, options?: msRest.RequestOptionsBase): Promise<Models.LastDetectResponse2>;\n  /**\n   * @param body Time series points and period if needed. Advanced model parameters can also be set\n   * in the request.\n   * @param callback The callback\n   */\n  lastDetect(body: Models.Request, callback: msRest.ServiceCallback<Models.LastDetectResponse>): void;\n  /**\n   * @param body Time series points and period if needed. Advanced model parameters can also be set\n   * in the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  lastDetect(body: Models.Request, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LastDetectResponse>): void;\n  lastDetect(body: Models.Request, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.LastDetectResponse>, callback?: msRest.ServiceCallback<Models.LastDetectResponse>): Promise<Models.LastDetectResponse2> {\n    return this.sendOperationRequest(\n      {\n        body,\n        options\n      },\n      lastDetectOperationSpec,\n      callback) as Promise<Models.LastDetectResponse2>;\n  }\n\n  /**\n   * Evaluate change point score of every series point\n   * @summary Detect change point for the entire series\n   * @param body Time series points and granularity is needed. Advanced model parameters can also be\n   * set in the request if needed.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ChangePointDetectResponse2>\n   */\n  changePointDetect(body: Models.ChangePointDetectRequest, options?: msRest.RequestOptionsBase): Promise<Models.ChangePointDetectResponse2>;\n  /**\n   * @param body Time series points and granularity is needed. Advanced model parameters can also be\n   * set in the request if needed.\n   * @param callback The callback\n   */\n  changePointDetect(body: Models.ChangePointDetectRequest, callback: msRest.ServiceCallback<Models.ChangePointDetectResponse>): void;\n  /**\n   * @param body Time series points and granularity is needed. Advanced model parameters can also be\n   * set in the request if needed.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  changePointDetect(body: Models.ChangePointDetectRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ChangePointDetectResponse>): void;\n  changePointDetect(body: Models.ChangePointDetectRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ChangePointDetectResponse>, callback?: msRest.ServiceCallback<Models.ChangePointDetectResponse>): Promise<Models.ChangePointDetectResponse2> {\n    return this.sendOperationRequest(\n      {\n        body,\n        options\n      },\n      changePointDetectOperationSpec,\n      callback) as Promise<Models.ChangePointDetectResponse2>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst entireDetectOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"timeseries/entire/detect\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      ...Mappers.Request,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.EntireDetectResponse\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst lastDetectOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"timeseries/last/detect\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      ...Mappers.Request,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.LastDetectResponse\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst changePointDetectOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"timeseries/changePoint/detect\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      ...Mappers.ChangePointDetectRequest,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ChangePointDetectResponse\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nexport {\n  AnomalyDetectorClient,\n  AnomalyDetectorClientContext,\n  Models as AnomalyDetectorModels,\n  Mappers as AnomalyDetectorMappers\n};\n"],"names":["msRest.getDefaultUserAgentValue","msRest.ServiceClient","msRest.Serializer","Parameters.endpoint","Mappers.Request","Mappers.EntireDetectResponse","Mappers.APIError","Mappers.LastDetectResponse","Mappers.ChangePointDetectRequest","Mappers.ChangePointDetectResponse"],"mappings":"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"}