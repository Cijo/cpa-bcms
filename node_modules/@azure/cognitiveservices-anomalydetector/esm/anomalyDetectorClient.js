/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign, __extends } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as Parameters from "./models/parameters";
import { AnomalyDetectorClientContext } from "./anomalyDetectorClientContext";
var AnomalyDetectorClient = /** @class */ (function (_super) {
    __extends(AnomalyDetectorClient, _super);
    /**
     * Initializes a new instance of the AnomalyDetectorClient class.
     * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus2.api.cognitive.microsoft.com).
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param [options] The parameter options
     */
    function AnomalyDetectorClient(credentials, endpoint, options) {
        return _super.call(this, credentials, endpoint, options) || this;
    }
    AnomalyDetectorClient.prototype.entireDetect = function (body, options, callback) {
        return this.sendOperationRequest({
            body: body,
            options: options
        }, entireDetectOperationSpec, callback);
    };
    AnomalyDetectorClient.prototype.lastDetect = function (body, options, callback) {
        return this.sendOperationRequest({
            body: body,
            options: options
        }, lastDetectOperationSpec, callback);
    };
    AnomalyDetectorClient.prototype.changePointDetect = function (body, options, callback) {
        return this.sendOperationRequest({
            body: body,
            options: options
        }, changePointDetectOperationSpec, callback);
    };
    return AnomalyDetectorClient;
}(AnomalyDetectorClientContext));
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var entireDetectOperationSpec = {
    httpMethod: "POST",
    path: "timeseries/entire/detect",
    urlParameters: [
        Parameters.endpoint
    ],
    requestBody: {
        parameterPath: "body",
        mapper: __assign(__assign({}, Mappers.Request), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.EntireDetectResponse
        },
        default: {
            bodyMapper: Mappers.APIError
        }
    },
    serializer: serializer
};
var lastDetectOperationSpec = {
    httpMethod: "POST",
    path: "timeseries/last/detect",
    urlParameters: [
        Parameters.endpoint
    ],
    requestBody: {
        parameterPath: "body",
        mapper: __assign(__assign({}, Mappers.Request), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.LastDetectResponse
        },
        default: {
            bodyMapper: Mappers.APIError
        }
    },
    serializer: serializer
};
var changePointDetectOperationSpec = {
    httpMethod: "POST",
    path: "timeseries/changePoint/detect",
    urlParameters: [
        Parameters.endpoint
    ],
    requestBody: {
        parameterPath: "body",
        mapper: __assign(__assign({}, Mappers.ChangePointDetectRequest), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.ChangePointDetectResponse
        },
        default: {
            bodyMapper: Mappers.APIError
        }
    },
    serializer: serializer
};
export { AnomalyDetectorClient, AnomalyDetectorClientContext, Models as AnomalyDetectorModels, Mappers as AnomalyDetectorMappers };
//# sourceMappingURL=anomalyDetectorClient.js.map